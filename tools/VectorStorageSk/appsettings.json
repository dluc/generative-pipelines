{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    },
    "Console": {
      "FormatterName": "simple",
      "FormatterOptions": {
        "IncludeScopes": true
      }
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    // Injected by Aspire (Redis, Azure AI Search, Qdrant, Postgres, etc.)
  },
  "GenerativePipelines":{
    "ToolsRegistryEnabled": false
  },
  "App": {
    "VectorStores": {
      "AzureAISearch": {
        "Deployments": {
          // The "default" deployment cfg is usually injected by Aspire. You can override the block here.
          // "default": {
          //   // https://...
          //   "Endpoint": "",
          //   // "ApiKey" or "AzureIdentity".
          //   //   When the service is on sovereign clouds you can use the AZURE_AUTHORITY_HOST env var to
          //   //   set the authority host. See https://learn.microsoft.com/dotnet/api/overview/azure/identity-readme
          //   //   You can test locally using the AZURE_TENANT_ID, AZURE_CLIENT_ID, AZURE_CLIENT_SECRET env vars.
          //   "Auth": "AzureIdentity",
          //   // Optional when Auth == AzureIdentity. Leave it null to use the default.
          //   // When the service is on sovereign clouds, this setting might be necessary to configure Entra auth tokens.
          //   // See https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/search/Azure.Search.Documents/src/SearchAudience.cs
          //   "AzureIdentityAudience": null,
          //   // Secret key used when Auth is set to "ApiKey".
          //   "ApiKey": "",
          // }
          // You can add more deployments using a different name.
          // "backup": {
          //   "Endpoint": "",
          //   "Auth": "AzureIdentity",
          //   "AzureIdentityAudience": null,
          //   "ApiKey": "",
          // }
        }
      }
    }
  }
}